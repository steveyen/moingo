## Please edit system and help pages ONLY in the master wiki!
## For more information, please see MoinMoin:MoinDev/Translation.
##master-page:Unknown-Page
##master-date:Unknown-Date
#acl -All:write Default
#format wiki
#language en
 . <<TableOfContents>>
== System Requirements & Preparation ==
Before you install !MoinMoin, you must have the necessary infrastructure in place. This procedure explains the steps necessary to install the infrastructure and provides detailed instructions for the installation of !MoinMoin.

 * '''Windows 2000, XP, or greater '''(including server variants, such as Windows 2000 Server).
  * Earlier versions of Windows (such as Win98 or WinME) are __''not''__ recommended due to their obsolete and poor-performing multiple-process handling. WinNT is obsolete and Microsoft has officially dropped support for it and should not be considered a safe server platform for the Internet.
  * Run Windows Update to ensure that you are running the latest service packs and security patches.
  * Apache doesn't require Windows Server (unlike IIS), so it's a great way to use an older desktop without using a Server license! Apache doesn't artificially limit the number of connections, unlike personal IIS for example.

Many users prefer to install software products in a folder other than the installation default. Python typically changes the default installation folder name with each point release, and Apache has changed the default installation folder name with the release of version 2.  Instead of enumerating all the possibilities at each step, this procedure will use the '''Reference''' name in the table below as the installed location for each product. Substitute your real installation location when editing configuration files and entering commands.
||<rowbgcolor="#eeddaa">Reference ||Product ||Installation Default or Typical Name ||
||'''C:\Apache''' || Apache ||C:\Program Files\Apache Group\Apache2 ||
||'''C:\Python''' ||Python ||C:\Python24 ||
||'''C:\Moin''' ||wiki instances ||C:\My Documents\Moin ||
Downloading and installing all of the required components below will require almost 100 MB of disk space - shouldn't be a problem nowadays, right?

== Installation ==
=== Installing Apache ===
 1. Download & Install Apache 2.0.xx or greater
  i. Apache2 was re-written with better support for non-unix systems, therefore the 2.0.xx series is ''strongly'' recommended for Windows users over Apache 1.3.xx.
  i. Go to http://httpd.apache.org
  i. download the '''Win32 Binary (MSI Installer)''' for the latest version of Apache 2.
  i. Read the Apache documentation to determine the correct installation procedure for your situation.
  i. Test your Apache installation to make sure it runs correctly before proceeding (questions and problems with the Apache installation should be resolved through the resources provided by the Apache organization).
=== Installing Python ===
There are currently two different distributions of Python available for Windows.

 1. The normal Python distribution is available from http://www.python.org. This is distributed as a windows executable (.exe) file.
 1. An alternative distribution called '''!ActivePython''' is available from http://www.activestate.com/. This distribution uses the MSI Installer and contains some tools specific to the Windows operating system and a popular Windows IDE called Pythonwin, which may be useful __''if''__ you also plan to develop in Python.  !ActivePython is available for free; an email address is requested (but not required) before downloading.
!MoinMoin will work with either distribution, but requires Python release 2.3 or later.  Download and install the distribution of your choice.  Questions and problems dealing with the Python installation process should be resolved through the use of resources provided by Python.org or !ActiveState.  Be sure your Python installation is correct before proceeding.

=== Installing MoinMoin ===
 1. '''Download !MoinMoin'''
  * The most current version is here: MoinMoin:MoinMoinDownload
 1. '''Expand the archive'''
  * __''Note:''__ users of older versions of [[http://www.winzip.com|WinZip]] report problem expanding .tar.gz files. Either upgrade or use the free [[http://7-zip.org/|7-Zip]] utility.
  * Expand the archive into {{{C:\TEMP}}} or an alternative location.
  * You should then have a folder such as {{{C:\TEMP\moin-x.x}}} where "x.x" is the current release number. This folder will contain a {{{setup.py}}} file in addition to several other files and subfolders.
 1. '''Run Setup.py from the commandline'''
  * Open an DOS window (start > Run... > type {{{cmd}}}) and enter the commands:<<BR>>
 {{{
C:
cd \TEMP\moin-x.x
C:\Python\python setup.py install --record=install.log
}}}
The above commands will add !MoinMoin to your {{{C:\Python}}} installation and create an {{{install.log}}} file in {{{C:\temp\moin-x.x}}} listing all the copied files. You can use Windows Explorer to examine the newly created folders within {{{C:\Python}}}. You should find a {{{C:\Python\share\moin}}} folder and a {{{C:\Python\Lib\site-packages\MoinMoin}}} folder. The {{{MoinMoin}}} folder contains many Python scripts and several subfolders.

You are now ready to create a wiki instance.

== Configuration ==
It is a good practice to try to keep all of your personal or site specific data under a few root folders. This way you can easily backup your important data on a regular basis without having to waste time either backing up static files or picking out dozens of important folders scattered throughout your folder structure.  You should avoid placing your wiki data under the {{{C:\Python}}} folder so that you can later upgrade Python or !MoinMoin without accidentally overwriting or deleting your wiki data.  For the same reason, you probably don't want to place your wiki data within the {{{C:\Apache}}} folder.

Choose a location appropriate for you; the following instructions assume you will be creating one or more wiki instances in {{{C:\Moin\}}} and the first wiki instance will be named {{{mywiki}}}.

You may replace the name {{{mywiki}}} with almost any name you wish, but do not use {{{wiki}}} because that is used by Moin``Moin for loading standard images and style sheets. Although this can be changed later, the name you choose for {{{mywiki}}} will become part of the url used to access your site, e.g. {{{http://server.myorganization.org/mywiki/FrontPage}}}.

=== Creating a Wiki Instance ===
Start an DOS window and enter the commands below. This will create a clone of the !MoinMoin wiki in the mywiki folder.

{{{
cd C:\
md Moin
md Moin\mywiki
md Moin\mywiki\data
md Moin\mywiki\underlay
cd \Python\share\moin
xcopy data        C:\Moin\mywiki\data /E
xcopy underlay    C:\Moin\mywiki\underlay /E
copy  config\*.* C:\Moin\mywiki\*.*
copy  server\*.* C:\Moin\mywiki\*.*
}}}
If your server is going to run multiple wikis, you need to create additional clones. Do the same commands again, but use mywiki2 instead of mywiki.

=== Configuring wikiconfig.py ===
Edit {{{C:\Moin\mywiki\wikiconfig.py}}} and at least change {{{sitename}}} to the name of your wiki:

{{{
    sitename = 'My Wiki'
}}}
Additionally, set {{{data_dir}}} and {{{data_underlay_dir}}} to the absolute paths of the particular directories. Like here:

{{{
    data_dir = r'C:\Moin\mywiki\data'
    data_underlay_dir = r'C:\Moin\mywiki\underlay'
}}}
For a public installation, you'll normally want to forbid some of the more dangerous actions. Add a line like this to {{{wikiconfig.py}}}:

{{{
    actions_excluded = ['AttachFile', 'DeletePage', 'RenamePage', ]
}}}
If you will '''''not''''' be running a Wiki farm (if you're not sure what this means, then you probably won't be), make sure to delete the {{{farmconfig.py}}} file from the {{{C:\Moin\mywiki}}} directory, or else {{{moin.cgi}}} will most likely give off various errors (including one about not being able to find a configuration file) and will ultimately fail to start up properly.

Additional configuration details can be found in HelpOnConfiguration.

=== Configuring moin.cgi ===
Use your editor to edit the file {{{C:\Moin\mywiki\moin.cgi}}}.  Change the first line (the shebang statement) to point to your local Python executable program. Note the forward slashes -- Apache uses the Unix convention for folder separators. This tells Apache the {{{moin.cgi}}} file is an executable script that will be interpreted by a program to be loaded from {{{C:/Python/python}}}.

{{{
 #! C:/Python/python
}}}
=== Configuring Apache httpd.conf ===
The next step is to tell Apache that is has more work to do. Use your editor to append the following lines to {{{C:\Apache\conf\httpd.conf}}}. Note the presence and absence of trailing slashes, it is important to enter the lines exactly as shown below.

{{{
Alias       /moin_static160/ "C:/Python/share/moin/htdocs/"
ScriptAlias /mywiki          "C:/Moin/mywiki/moin.cgi"
}}}
The '''Alias''' line above instructs Apache to serve images, style sheets, etc. from the specified folders and subfolders. The '''Script``Alias''' line is needed once for each wiki instance, so if you have multiple wikis, repeat the statement using mywiki2, mywiki3, etc. The Script``Alias statement instructs Apache to execute scripts from the specified folder. See the Apache docs for a complete explanation.

Test your changes by restarting your Apache server and try to access your newborn wiki with the URL {{{http://127.0.0.1/mywiki}}}. You should see the Front``Page, try to edit and save it, and if that works, verify your edit is reflected on the Recent``Changes page.

And now, it is up to you and your user community to transform your wiki into an informative and useful tool. You will probably want to retain most of the Help``On~ pages dealing with editing, delete those pages with irrelevant information (like this page, don't let your users or boss know how easy it was to install Moin``Moin ;-) ), and rewrite the Front``Page to introduce your wiki topic.

== Troubleshooting ==
The first place to look for clues when the unexpected happens is to try changing your url to: {{{http://127.0.0.1/mywiki?action=test}}}. If Apache can find and execute the module {{{C:/Moin/mywiki/moin.cgi}}}, a page of diagnostics titled '''Moin``Moin CGI Diagnosis''' will be displayed. Check the output for error messages.

The second place to look for is {{{C:\Apache\logs\error.log}}}. The following are common errors grouped by the message displayed by your browser:

 * '''Internal Server Error'''
  * If the Apache log shows a message "The system cannot find the file specified." then a possibility is the shebang statement in {{{moin.cgi}}} is incorrect.
  * If the Apache log shows a different error message, then the Moin``Moin Python scripts may be abending. To determine the cause, you could try temporarily renaming {{{moin.cgi}}} to {{{moin.py}}}, loading {{{moin.py}}} with the Python '''idle''' IDE and executing it to determine if there are any error messages.
 * '''Not Found'''
  * If the Apache error log shows the message "File does not exist: C:/Apache/htdocs/mywiki",  the '''Script``Alias''' statement in {{{httpd.conf}}} may be incorrect.
 * '''The Page Cannot be found'''
  * If the Apache error log shows the message "File does not exist: C:/Apache/htdocs/????", you may have mistyped the url "http://127.0.0.1/mywiki" into your browser.
 * '''!FrontPage Loads Without Icons'''
  * If the Apache Error log shows many error messages "File does not exist: C:/Apache/htdocs/wiki", then the '''Alias''' statement in {{{httpd.conf}}} may be incorrect.
 * If you did not install !MoinMoin in the Python site-packages folder (i.e. only if you deviated from the above instructions), you will have to activate the lines which add a folder to the sys.path and enter your path to !MoinMoin there:<<BR>>
 {{{
import sys
sys.path.insert(0, r'C:\Moin\...')
}}}
== Next Steps ==
=== Authenticating MoinMoin Users Against a Domain Controller ===
 . Many organizations are setting up wiki's for documentation on their internal network.  As a result, many organizations require the security of authentication, which protects their content, as well as allowing people to work remotely on the wiki without anonymous eye's peeking at their site.  Domain authentication is convenient for both the administrator and the user, because it uses the same password the user would use for other network logins.  If this describes you, proceed to:
 . ../ApacheOnWin32withDomainAuthentication
=== Simple Windows MoinMoin Backup ===
 . Simple strategy for backing up your wiki:
 . ../Win32MoinEasyBackup

=== FastCGI with Windows ===
 . Dramatically increase performance of your wiki with the FastCGI Apache module:
 . ../ApacheOnWin32withFastCgi
